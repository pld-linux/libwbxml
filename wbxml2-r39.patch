Index: /wbxml2/trunk/src/wbxml_tree.h
===================================================================
--- /wbxml2/trunk/src/wbxml_tree.h (revision 35)
+++ /wbxml2/trunk/src/wbxml_tree.h (revision 39)
@@ -181,8 +181,8 @@
 /**
  * @brief Convert a WBXML Tree to an XML document
- * @param tree      [in]  The WBXML Tree to convert
- * @param wbxml     [out] The resulting XML document
- * @param wbxml_len [out] The resulting XML document length
- * @param params    [in]  Parameters (if NULL, default values are used)
+ * @param tree    [in]  The WBXML Tree to convert
+ * @param xml     [out] The resulting XML document
+ * @param xml_len [out] The resulting XML document length
+ * @param params  [in]  Parameters (if NULL, default values are used)
  * @result Return WBXML_OK if no error, an error code otherwise
  */
@@ -238,5 +238,5 @@
 /**
  * @brief Destroy a Tree Node structure (used for wbxml_list_destroy())
- * @paramnode The Tree Node structure to destroy
+ * @param node The Tree Node structure to destroy
  */
 WBXML_DECLARE(void) wbxml_tree_node_destroy_item(void *node);
Index: /wbxml2/trunk/src/wbxml_charset.h
===================================================================
--- /wbxml2/trunk/src/wbxml_charset.h (revision 5)
+++ /wbxml2/trunk/src/wbxml_charset.h (revision 39)
@@ -98,5 +98,5 @@
  * @param in_buf      Buffer to convert
  * @param io_bytes    Number of bytes in buffer
- * @param in_charser  Original charset
+ * @param in_charset  Original charset
  * @param out_buf     Resulting converted Buffer
  * @param out_charset Destination charset
@@ -124,5 +124,5 @@
  * @param in_buf      Buffer to convert
  * @param io_bytes    Number of bytes in buffer
- * @param in_charser  Original charset
+ * @param in_charset  Original charset
  * @param out_buf     Resulting converted Buffer
  * @param out_charset Destination charset
Index: /wbxml2/trunk/src/wbxml_encoder.c
===================================================================
--- /wbxml2/trunk/src/wbxml_encoder.c (revision 34)
+++ /wbxml2/trunk/src/wbxml_encoder.c (revision 39)
@@ -103,6 +103,6 @@
 
 /**
- * If defined, generate empty XML elements (eg: <foo />), else generate
- * full "end element" (eg: <foo></foo>)
+ * If defined, generate empty XML elements (eg: &lt;foo /&gt;), else generate
+ * full "end element" (eg: &lt;foo&gt;&lt;/foo&gt;)
  *
  * @todo This must be a 'WBXMLGenXMLParams' parameter
@@ -111,8 +111,8 @@
 
 /**
- * If defined, do not indent elements that have no element child (eg: <foo>bar</foo>),
- * else indent anyway (eg: <foo>
+ * If defined, do not indent elements that have no element child (eg: &lt;foo&gt;bar&lt;/foo&gt;),
+ * else indent anyway (eg: &lt;foo&gt;
  *                           bar
- *                         </foo>)
+ *                         &lt;/foo&gt;)
  *
  * @todo This must be a 'WBXMLGenXMLParams' parameter
Index: /wbxml2/trunk/src/wbxml_encoder.h
===================================================================
--- /wbxml2/trunk/src/wbxml_encoder.h (revision 7)
+++ /wbxml2/trunk/src/wbxml_encoder.h (revision 39)
@@ -192,5 +192,5 @@
  * You should use this function (with TRUE parameter) before calling wbxml_encoder_encode_node().
  *
- * @param encode    [in] The WBXML Encoder to use
+ * @param encoder   [in] The WBXML Encoder to use
  * @param flow_mode [in] Set Flow Mode ?
  * @return Return WBXML_OK if no error, an error code otherwise
@@ -227,6 +227,6 @@
  * You must call wbxml_encoder_set_lang() before using this function.
  *
- * @param encode [in] The WBXML Encoder to use
- * @param node   [in] The WBXML Tree Node to encode
+ * @param encoder [in] The WBXML Encoder to use
+ * @param node    [in] The WBXML Tree Node to encode
  * @return Return WBXML_OK if no error, an error code otherwise
  */
@@ -237,5 +237,5 @@
  *
  * @param encoder [in] The WBXML Encoder to use
- * @param tree    [in] The WBXML Tree to encode
+ * @param node    [in] The WBXML Tree Node to encode
  * @param enc_end [in] Encoded element 'end' ?
  * @return Return WBXML_OK if no error, an error code otherwise
